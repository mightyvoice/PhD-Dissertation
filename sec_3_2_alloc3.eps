%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Darwin 14.4.0 Darwin Kernel Version 14.4.0: Thu May 28 11:35:04 PDT 2015; root:xnu-2782.30.5~1/RELEASE_X86_64 x86_64.
%%Title: /Users/lj/Downloads/alloc3.eps
%%CreationDate: 07/29/2015  21:55:23
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6722 5040 rf
6 w
0 4107 5209 0 0 -4107 874 4485 4 MP
PP
-5209 0 0 4107 5209 0 0 -4107 874 4485 5 MP stroke
4 w
DO
SO
6 w
0 sg
 874 4485 mt 6083 4485 L
 874  378 mt 6083  378 L
 874 4485 mt  874  378 L
6083 4485 mt 6083  378 L
 874 4485 mt 6083 4485 L
 874 4485 mt  874  378 L
 874 4485 mt  874 4432 L
 874  378 mt  874  430 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 834 4653 mt 
(3) s
1394 4485 mt 1394 4432 L
1394  378 mt 1394  430 L
1294 4653 mt 
(3.5) s
1915 4485 mt 1915 4432 L
1915  378 mt 1915  430 L
1875 4653 mt 
(4) s
2436 4485 mt 2436 4432 L
2436  378 mt 2436  430 L
2336 4653 mt 
(4.5) s
2957 4485 mt 2957 4432 L
2957  378 mt 2957  430 L
2917 4653 mt 
(5) s
3478 4485 mt 3478 4432 L
3478  378 mt 3478  430 L
3378 4653 mt 
(5.5) s
3999 4485 mt 3999 4432 L
3999  378 mt 3999  430 L
3959 4653 mt 
(6) s
4520 4485 mt 4520 4432 L
4520  378 mt 4520  430 L
4420 4653 mt 
(6.5) s
5041 4485 mt 5041 4432 L
5041  378 mt 5041  430 L
5001 4653 mt 
(7) s
5562 4485 mt 5562 4432 L
5562  378 mt 5562  430 L
5462 4653 mt 
(7.5) s
6083 4485 mt 6083 4432 L
6083  378 mt 6083  430 L
6043 4653 mt 
(8) s
 874 4485 mt  926 4485 L
6083 4485 mt 6030 4485 L
 759 4538 mt 
(1) s
 874 3800 mt  926 3800 L
6083 3800 mt 6030 3800 L
 639 3853 mt 
(1.5) s
 874 3116 mt  926 3116 L
6083 3116 mt 6030 3116 L
 759 3169 mt 
(2) s
 874 2431 mt  926 2431 L
6083 2431 mt 6030 2431 L
 639 2484 mt 
(2.5) s
 874 1747 mt  926 1747 L
6083 1747 mt 6030 1747 L
 759 1800 mt 
(3) s
 874 1062 mt  926 1062 L
6083 1062 mt 6030 1062 L
 639 1115 mt 
(3.5) s
 874  378 mt  926  378 L
6083  378 mt 6030  378 L
 759  431 mt 
(4) s
 874 4485 mt 6083 4485 L
 874  378 mt 6083  378 L
 874 4485 mt  874  378 L
6083 4485 mt 6083  378 L
gs 874 378 5210 4108 rc
24 w
/c8 { 1.000000 0.000000 1.000000 sr} bdef
c8
1042 205 1042 82 1042 69 1042 123 1041 205 874 378 6 MP stroke
gr

24 w
c8
 802  378 mt  946  378 L
 874  306 mt  874  450 L
1843  583 mt 1987  583 L
1915  511 mt 1915  655 L
2885  706 mt 3029  706 L
2957  634 mt 2957  778 L
3927  775 mt 4071  775 L
3999  703 mt 3999  847 L
4969  857 mt 5113  857 L
5041  785 mt 5041  929 L
6011 1062 mt 6155 1062 L
6083  990 mt 6083 1134 L
 824  328 mt  924  428 L
 924  328 mt  824  428 L
1865  533 mt 1965  633 L
1965  533 mt 1865  633 L
2907  656 mt 3007  756 L
3007  656 mt 2907  756 L
3949  725 mt 4049  825 L
4049  725 mt 3949  825 L
4991  807 mt 5091  907 L
5091  807 mt 4991  907 L
6033 1012 mt 6133 1112 L
6133 1012 mt 6033 1112 L
gs 874 378 5210 4108 rc
DA
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
1042 232 1042 521 1042 137 1042 479 1041 575 874 2198 6 MP stroke
gr

c9
DA
SO
0 j
-41 -31 15 -50 -43 30 -42 -30 15 50 -41 31 52 0 16 49 
17 -49 52 0 805 2175 11 MP
DP
-41 -31 15 -50 -43 30 -42 -30 15 50 -41 31 52 0 16 49 
17 -49 52 0 1846 2750 11 MP
DP
-41 -31 15 -50 -43 30 -42 -30 15 50 -41 31 52 0 16 49 
17 -49 52 0 2888 3229 11 MP
DP
-41 -31 15 -50 -43 30 -42 -30 15 50 -41 31 52 0 16 49 
17 -49 52 0 3930 3366 11 MP
DP
-41 -31 15 -50 -43 30 -42 -30 15 50 -41 31 52 0 16 49 
17 -49 52 0 4972 3887 11 MP
DP
-41 -31 15 -50 -43 30 -42 -30 15 50 -41 31 52 0 16 49 
17 -49 52 0 6014 4119 11 MP
DP
DA
gs 874 378 5210 4108 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 216 FMSR

1081 4867 mt 
(The number of SUs known each other' information) s
 536 4337 mt  -90 rotate
(The average number of valid allocations) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 857 4528 mt 
( ) s
6067  420 mt 
( ) s
SO
6 w
1 sg
0 510 3657 0 0 -510 2144 1980 4 MP
PP
-3657 0 0 510 3657 0 0 -510 2144 1980 5 MP stroke
4 w
DO
SO
6 w
0 sg
2144 1980 mt 5801 1980 L
2144 1470 mt 5801 1470 L
2144 1980 mt 2144 1470 L
5801 1980 mt 5801 1470 L
2144 1980 mt 5801 1980 L
2144 1980 mt 2144 1470 L
2144 1980 mt 5801 1980 L
2144 1470 mt 5801 1470 L
2144 1980 mt 2144 1470 L
5801 1980 mt 5801 1470 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

2612 1668 mt 
(Our proposed channel allocation scheme) s
gs 2144 1470 3658 511 rc
24 w
c8
360 0 2215 1608 2 MP stroke
gr

24 w
c8
gs 2225 1438 341 341 rc
2323 1608 mt 2467 1608 L
2395 1536 mt 2395 1680 L
2345 1558 mt 2445 1658 L
2445 1558 mt 2345 1658 L
gr

gs 2144 1470 3658 511 rc
gr

0 sg
2612 1903 mt 
(The random channel allocation scheme) s
gs 2144 1470 3658 511 rc
DA
c9
360 0 2215 1841 2 MP stroke
SO
gr

c9
gs 2225 1671 341 341 rc
-41 -31 15 -50 -43 30 -42 -30 15 50 -41 31 52 0 16 49 
17 -49 52 0 2326 1818 11 MP
DP
gr

gs 2144 1470 3658 511 rc
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
