%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.9.0.529 (R2009b). Operating System: Darwin 12.3.0 Darwin Kernel Version 12.3.0: Sun Jan  6 22:37:10 PST 2013; root:xnu-2050.22.13~1/RELEASE_X86_64 x86_64.
%%Title: /Users/lj/chan_num.eps
%%CreationDate: 03/29/2013  17:55:52
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    74   218   537   574
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    74   218   537   574
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0888 6888 csm

    0     0  5559  4272 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5560 4273 rf
6 w
0 3482 4308 0 0 -3482 723 3802 4 MP
PP
-4308 0 0 3482 4308 0 0 -3482 723 3802 5 MP stroke
4 w
DO
SO
6 w
0 sg
 723 3802 mt 5031 3802 L
 723  320 mt 5031  320 L
 723 3802 mt  723  320 L
5031 3802 mt 5031  320 L
 723 3802 mt 5031 3802 L
 723 3802 mt  723  320 L
 723 3802 mt  723 3758 L
 723  320 mt  723  363 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

 683 3970 mt 
(0) s
1441 3802 mt 1441 3758 L
1441  320 mt 1441  363 L
1361 3970 mt 
(10) s
2159 3802 mt 2159 3758 L
2159  320 mt 2159  363 L
2079 3970 mt 
(20) s
2877 3802 mt 2877 3758 L
2877  320 mt 2877  363 L
2797 3970 mt 
(30) s
3595 3802 mt 3595 3758 L
3595  320 mt 3595  363 L
3515 3970 mt 
(40) s
4313 3802 mt 4313 3758 L
4313  320 mt 4313  363 L
4233 3970 mt 
(50) s
5031 3802 mt 5031 3758 L
5031  320 mt 5031  363 L
4951 3970 mt 
(60) s
 723 3802 mt  766 3802 L
5031 3802 mt 4987 3802 L
 528 3855 mt 
(38) s
 723 3221 mt  766 3221 L
5031 3221 mt 4987 3221 L
 528 3274 mt 
(39) s
 723 2641 mt  766 2641 L
5031 2641 mt 4987 2641 L
 528 2694 mt 
(40) s
 723 2061 mt  766 2061 L
5031 2061 mt 4987 2061 L
 528 2114 mt 
(41) s
 723 1480 mt  766 1480 L
5031 1480 mt 4987 1480 L
 528 1533 mt 
(42) s
 723  900 mt  766  900 L
5031  900 mt 4987  900 L
 528  953 mt 
(43) s
 723  320 mt  766  320 L
5031  320 mt 4987  320 L
 528  373 mt 
(44) s
 723 3802 mt 5031 3802 L
 723  320 mt 5031  320 L
 723 3802 mt  723  320 L
5031 3802 mt 5031  320 L
gs 723 320 4309 3483 rc
18 w
359 0 359 0 359 0 359 0 359 0 359 0 359 0 359 0 
359 0 359 0 359 0 1082 320 12 MP stroke
gr

18 w
gs 990 228 4134 185 rc
  36   36 1082  320 FO
  36   36 1441  320 FO
  36   36 1800  320 FO
  36   36 2159  320 FO
  36   36 2518  320 FO
  36   36 2877  320 FO
  36   36 3236  320 FO
  36   36 3595  320 FO
  36   36 3954  320 FO
  36   36 4313  320 FO
  36   36 4672  320 FO
  36   36 5031  320 FO
gr

gs 723 320 4309 3483 rc
DA
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
359 0 359 580 359 0 359 581 359 0 359 580 359 580 359 0 
359 0 359 -2321 359 -1161 1082 3802 12 MP stroke
gr

c8
DA
gs 990 228 4134 3667 rc
SO
0 j
41 71 -82 0 41 -71 1082 3849 4 MP
DP
41 71 -82 0 41 -71 1441 2688 4 MP
DP
41 71 -82 0 41 -71 1800 367 4 MP
DP
41 71 -82 0 41 -71 2159 367 4 MP
DP
41 71 -82 0 41 -71 2518 367 4 MP
DP
41 71 -82 0 41 -71 2877 947 4 MP
DP
41 71 -82 0 41 -71 3236 1527 4 MP
DP
41 71 -82 0 41 -71 3595 1527 4 MP
DP
41 71 -82 0 41 -71 3954 2108 4 MP
DP
41 71 -82 0 41 -71 4313 2108 4 MP
DP
41 71 -82 0 41 -71 4672 2688 4 MP
DP
41 71 -82 0 41 -71 5031 2688 4 MP
DP
DA
gr

gs 723 320 4309 3483 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

1137 4148 mt 
(The power of the SU without optimization \(mw\)) s
 436 3662 mt  -90 rotate
(The number of common available channels) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

 706 3845 mt 
( ) s
5015  362 mt 
( ) s
SO
6 w
1 sg
0 438 2269 0 0 -438 1850 2970 4 MP
PP
-2269 0 0 438 2269 0 0 -438 1850 2970 5 MP stroke
4 w
DO
SO
6 w
0 sg
1850 2970 mt 4119 2970 L
1850 2532 mt 4119 2532 L
1850 2970 mt 1850 2532 L
4119 2970 mt 4119 2532 L
1850 2970 mt 4119 2970 L
1850 2970 mt 1850 2532 L
1850 2970 mt 4119 2970 L
1850 2532 mt 4119 2532 L
1850 2970 mt 1850 2532 L
4119 2970 mt 4119 2532 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

2341 2703 mt 
(Always use optimal power) s
gs 1850 2532 2270 439 rc
18 w
377 0 1925 2652 2 MP stroke
gr

18 w
  36   36 2114 2652 FO
gs 1850 2532 2270 439 rc
gr

2341 2902 mt 
(Use different power) s
gs 1850 2532 2270 439 rc
DA
c8
377 0 1925 2850 2 MP stroke
SO
gr

c8
0 j
41 71 -82 0 41 -71 2114 2897 4 MP
DP
gs 1850 2532 2270 439 rc
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
