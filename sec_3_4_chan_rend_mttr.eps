%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Darwin 14.1.0 Darwin Kernel Version 14.1.0: Thu Feb 26 19:26:47 PST 2015; root:xnu-2782.10.73~1/RELEASE_X86_64 x86_64.
%%Title: /Users/lj/Downloads/chan_rend_mttr.eps
%%CreationDate: 03/31/2015  23:33:27
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   -80   155   692   638
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   -80   155   692   638
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -0960 7656 csm

    0     0  9264  5795 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 9265 5796 rf
6 w
0 4723 7180 0 0 -4723 1204 5158 4 MP
PP
-7180 0 0 4723 7180 0 0 -4723 1204 5158 5 MP stroke
4 w
DO
SO
6 w
0 sg
1204 5158 mt 8384 5158 L
1204  435 mt 8384  435 L
1204 5158 mt 1204  435 L
8384 5158 mt 8384  435 L
1204 5158 mt 8384 5158 L
1204 5158 mt 1204  435 L
1922 5158 mt 1922 5086 L
1922  435 mt 1922  506 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1889 5303 mt 
(1) s
3358 5158 mt 3358 5086 L
3358  435 mt 3358  506 L
3325 5303 mt 
(5) s
4794 5158 mt 4794 5086 L
4794  435 mt 4794  506 L
4728 5303 mt 
(10) s
6230 5158 mt 6230 5086 L
6230  435 mt 6230  506 L
6164 5303 mt 
(15) s
7666 5158 mt 7666 5086 L
7666  435 mt 7666  506 L
7600 5303 mt 
(20) s
1204 5158 mt 1275 5158 L
8384 5158 mt 8312 5158 L
1103 5202 mt 
(0) s
1204 4567 mt 1275 4567 L
8384 4567 mt 8312 4567 L
 969 4611 mt 
(100) s
1204 3977 mt 1275 3977 L
8384 3977 mt 8312 3977 L
 969 4021 mt 
(200) s
1204 3386 mt 1275 3386 L
8384 3386 mt 8312 3386 L
 969 3430 mt 
(300) s
1204 2796 mt 1275 2796 L
8384 2796 mt 8312 2796 L
 969 2840 mt 
(400) s
1204 2206 mt 1275 2206 L
8384 2206 mt 8312 2206 L
 969 2250 mt 
(500) s
1204 1615 mt 1275 1615 L
8384 1615 mt 8312 1615 L
 969 1659 mt 
(600) s
1204 1025 mt 1275 1025 L
8384 1025 mt 8312 1025 L
 969 1069 mt 
(700) s
1204  435 mt 1275  435 L
8384  435 mt 8312  435 L
 969  479 mt 
(800) s
1204 5158 mt 8384 5158 L
1204  435 mt 8384  435 L
1204 5158 mt 1204  435 L
8384 5158 mt 8384  435 L
gs 1204 435 7181 4724 rc
/c8 { 0.301961 0.745098 0.933333 sr} bdef
c8
0 225 328 0 0 -225 1552 5158 4 MP
PP
0 sg
-328 0 0 225 328 0 0 -225 1552 5158 5 MP stroke
c8
0 768 328 0 0 -768 2988 5158 4 MP
PP
0 sg
-328 0 0 768 328 0 0 -768 2988 5158 5 MP stroke
c8
0 1500 328 0 0 -1500 4424 5158 4 MP
PP
0 sg
-328 0 0 1500 328 0 0 -1500 4424 5158 5 MP stroke
c8
0 2096 328 0 0 -2096 5860 5158 4 MP
PP
0 sg
-328 0 0 2096 328 0 0 -2096 5860 5158 5 MP stroke
c8
0 2858 328 0 0 -2858 7296 5158 4 MP
PP
0 sg
-328 0 0 2858 328 0 0 -2858 7296 5158 5 MP stroke
7180 0 1204 5158 2 MP stroke
/c9 { 0.500000 0.000000 0.000000 sr} bdef
c9
0 284 328 0 0 -284 1963 5158 4 MP
PP
0 sg
-328 0 0 284 328 0 0 -284 1963 5158 5 MP stroke
c9
0 1081 328 0 0 -1081 3399 5158 4 MP
PP
0 sg
-328 0 0 1081 328 0 0 -1081 3399 5158 5 MP stroke
c9
0 2209 328 0 0 -2209 4835 5158 4 MP
PP
0 sg
-328 0 0 2209 328 0 0 -2209 4835 5158 5 MP stroke
c9
0 3023 328 0 0 -3023 6271 5158 4 MP
PP
0 sg
-328 0 0 3023 328 0 0 -3023 6271 5158 5 MP stroke
c9
0 4245 328 0 0 -4245 7707 5158 4 MP
PP
0 sg
-328 0 0 4245 328 0 0 -4245 7707 5158 5 MP stroke
gr

%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 240 FMSR

2480 5534 mt 
(The time in each transmission sector \(slots\)) s
 860 5266 mt  -90 rotate
(Average time to successfully build a link \(slots\)) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1187 5201 mt 
( ) s
8368  477 mt 
( ) s
1 sg
0 509 1835 0 0 -509 1607 1272 4 MP
PP
-1835 0 0 509 1835 0 0 -509 1607 1272 5 MP stroke
4 w
DO
SO
6 w
0 sg
1607 1272 mt 3442 1272 L
1607  763 mt 3442  763 L
1607 1272 mt 1607  763 L
3442 1272 mt 3442  763 L
1607 1272 mt 3442 1272 L
1607 1272 mt 1607  763 L
1607 1272 mt 3442 1272 L
1607  763 mt 3442  763 L
1607 1272 mt 1607  763 L
3442 1272 mt 3442  763 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 168 FMSR

2075  961 mt 
(Our scheme) s
gs 1607 763 1836 510 rc
c8
-360 0 0 176 360 0 0 -176 1679 988 5 MP
PP
0 sg
0 0 -360 0 0 176 360 0 0 -176 1679 988 6 MP stroke
gr

2075 1195 mt 
(Random scheme) s
gs 1607 763 1836 510 rc
c9
-360 0 0 176 360 0 0 -176 1679 1222 5 MP
PP
0 sg
0 0 -360 0 0 176 360 0 0 -176 1679 1222 6 MP stroke
gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
